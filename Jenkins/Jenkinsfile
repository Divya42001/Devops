// Jenkins installed and configured.
// Docker installed on the Jenkins agent.
// AWS CLI installed on the Jenkins agent.
// Jenkins plugins: Docker Pipeline, AWS Steps, AWS CLI, Pipeline, Git.


// Pipeline Steps:
// Build Stage: Build the Java application and package it into a Docker container.
// Test Stage: Run tests on the Java application.
// Deploy Stage: Deploy the containerized application to Amazon EKS using AWS SAM.


pipeline {
    agent any

    environment {
        DOCKER_IMAGE_TAG = "latest"
        AWS_REGION = "ap-south-1"
        AWS_ECR_REPO = "Halfway-ecr-repo"
        AWS_EKS_CLUSTER_NAME = "Halfway-eks-cluster"
        AWS_SAM_STACK_NAME = "your-sam-stack-name"
    }

    stages {
        stage('Build') {
            steps {
                echo "Building Docker image..."
                sh "docker build -t $AWS_ECR_REPO:$DOCKER_IMAGE_TAG ."
                echo "Logging in to AWS ECR..."
                sh "aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ECR_REPO"
                echo "Pushing Docker image to ECR..."
                sh "docker push $AWS_ECR_REPO:$DOCKER_IMAGE_TAG"
            }
        }

        stage('Test') {
            steps {
                echo "Running tests..."
                // Add your testing commands here
            }
        }

        steps {
        script {
            withAWS(region: AWS_REGION) {
                sh "kubectl config use-context ${AWS_EKS_CLUSTER_NAME}"
                sh "kubectl apply -f deployment.yaml"
            }
        }
    }
    }
}
